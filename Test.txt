Hi this yaganti Document

Step:1   
 Open the any folder  create the one new folder  Bridge right click test right click  
Get bus ls get init initialize get empty repository

Step :2
 Go to the folder  test openwrite the any files  open mingw64 Git add . Git status Git commit –m “file is added

Step :3 
 Open the Get hub loginusers clickrepositorynew repository name(write the any name)samplepubliccreate repositoryget remote origin “url” open cmd fromshift insert copyenterGet push origin master (any net problem unable axis error)

Step:4
 open repositoryyagantivenkatesrepositorytest
Repository Editing process
Step 1:
Edit adding some lines commit change updated new lines  commit change git pull origin master cheek it url local repository
Push local repository code using push concept (git repository to local repository code full command using(both are the commends small change

Conflux problem
-----------------
Step 1:
 open repository edit add some lines commit changes adding new points
Step 2:
open your folder adding some another pointsget add . get statusget commit –m “updated the new point conflict example”get push origin masterget pull origin master
Step 3:
Open your folderremove the conflict linesctrl+sget add .-->get statusget commit –m “resolved problem conflux”get push origin master

BranchingStatements:
---------------------
Branching Statement
Step 1: 
Get branch(checking purpose)
Git checkout –b chailed
Git add . git status
Step 1: 
open the folder add spme conceptcreategit add .-->git statusgit commit –m “childtest added”git push origin chailedopen repositorymaster openchailed

Merging Process:
---------------
Step 1: 
git checkout mastergit merge childgit add .-->git statusgit push origin master
Step 2:
open repositorymaster checket
Step 3:
git chek out master
Step 4:
 adding local repositoryctrl+sgit add .-->git statusgit commit –m “update master”git push origin master
Step 5:
branch chilled git checkout to branch “child”git merge mastergit statusgit push origin master
Step6:
History  >history.txtgit add history git statusgit commit –m “history add” git push origin master

Terminal Conditions
---------------------
1.	Mkdir 
2.	Cd
3.	Ls
4.	Pwd
5.	Ls ~  (home directory file)
6.	Cd ~ go to home directory
7.	Cd  – (go to home folder)
8.	Ls  –a (hidden all files)
9.	Ls  –al    (hidden all files with long formal)
10.	Ls ..  (show the parent directory)
11.	Cd  .. (change the directory go to get back)
12.	Mkdir  –p(make anext directory m_p)
13.	Rm –r (remove directory)
14.	Touch a.txt b.txt c.txt create the files
15.	Ls  –l (show the long deseription)
16.	Ls  –p(show the short deseription)
17.	Cp a.txt b.txt c.txt
18.	Where cp(show the path of directory)(where is cp)
19.	Ls –l/bin  (show the bin directory files in bin directory)
20.	Ls  /etc/passwd
21.	Cat  /etc/passwd (go to the files show)
22.	Less  /etc/passwd(less view to the passwd)
23.	Head /etc (top line shows)
24.	Tail /etc/passwd (bottom lines shows)
25.	Tail  -20/etc/passwd  (show the bottom of the lines)

small length condition
------------------------
26.	Find  .  –size  +5M –name *.pdf(find the as type of file those are is greater then 5mb size those extensions is pdf)
27.	find  .  –size +5M –type F –name.*pdf
28.	find  .  -size +5M F |grep *.pdf
29.	cat  data .csv 
30.	find linux-content /-n *.csv
31.	grep  –| caption
32.	grep  –ir  caption
33.	ls  –p | grep  (global regular expression)
34.	grep  –v caption
35.	env
36.	env  | grep –| name
37.	env  | grep –| user
38.	echo $USER
39.	echo $SHELL
40.	echo bash
41.	bash [String]
42.	bash –version (show the bash version)
43.	echo [String] (echo “yvs” %p=yvs
44.	du  –sh (file name)
45.	du  –sm
46.	du  –sk
47.	where is short
48.	du –sk  yvs/*
49.	du –sk yvs/* /sort –n
50.	du –sk yvs/* /sort –ne
51.	find –type F –empty

java linux commands
--------------------
52.	jobs
53.	ps –elf | grep java | grep –v grep
54.	ps –elf | grep java
55.	ps –elf | grep java | grep –grep
56.	echo hello tom | awk “{$=”admin”}{echo $o}”
57.	echo hello tom | awk “{$2=”admin”}{print $}”
58.	echo hello tom | awk ‘BEGIN{$2=”admin”}END{print $0}
59.	cat data.csv
60.	cat data .csv | grep –I CAPTION
61.	cat data.csv | grep –I CAPTION | awk ‘{print$2’’$4’}
62.	cat data.csv | grep –I caption | awk ‘{sum+=$4}END{print sum}’
